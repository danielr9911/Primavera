/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Graphic;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import primavera.Primavera;

/**
 *
 * @author Daniel
 */
public class ConsultaPorProfesion extends javax.swing.JFrame {
    
    Connection conn = null;
    DefaultTableModel modelo = new DefaultTableModel();

    /**
     * Creates new form ConsultaPorProfesion
     */
    public ConsultaPorProfesion() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("--PRIMAVERA--CONSULTA POR PROFESION--");
        this.tablaAMostrar.setModel(modelo);
        try {
            conn = Primavera.Enlace(conn);
            String sqlinsertar = "select nombre_profesion from profesion";
            PreparedStatement psta = conn.prepareStatement(sqlinsertar);
            ResultSet rs = psta.executeQuery();
            while (rs.next()) {
                profesionCb.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        todosButton = new javax.swing.JButton();
        profesoresButton = new javax.swing.JButton();
        estudiantesButton = new javax.swing.JButton();
        externosButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaAMostrar = new javax.swing.JTable();
        cancelarButton = new javax.swing.JButton();
        profesionCb = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logo50.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ConsultaProfesion.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("Profesi√≥n");

        todosButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        todosButton.setText("Todos");
        todosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todosButtonActionPerformed(evt);
            }
        });

        profesoresButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        profesoresButton.setText("Profesores");
        profesoresButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profesoresButtonActionPerformed(evt);
            }
        });

        estudiantesButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        estudiantesButton.setText("Estudiantes");
        estudiantesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estudiantesButtonActionPerformed(evt);
            }
        });

        externosButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        externosButton.setText("Externos");
        externosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                externosButtonActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(tablaAMostrar);

        cancelarButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cancelarButton.setText("Cancelar");
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(todosButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(profesoresButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(estudiantesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(externosButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 92, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(161, 161, 161)
                        .addComponent(profesionCb, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(profesionCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(todosButton)
                    .addComponent(profesoresButton)
                    .addComponent(estudiantesButton)
                    .addComponent(externosButton)
                    .addComponent(cancelarButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(298, 298, 298))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void todosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todosButtonActionPerformed
        modelo = new DefaultTableModel();
        System.out.println("todos finding...");
        if (profesionCb.getSelectedItem().toString().equals("")) {
            profesionCb.requestFocusInWindow();
        } else {
            try {
                conn = Primavera.Enlace(conn);
                String id = Primavera.getId("id_profesion", "nombre_profesion", "Profesion", profesionCb.getSelectedItem().toString());
                System.out.println(id);
                ResultSet rs = Primavera.selectAllFrom("personal", "id_profesion", id);
                ResultSetMetaData rsMd = rs.getMetaData();
                // Se obtiene el n√∫mero de columnas.
                int numeroColumnas = rsMd.getColumnCount();
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.addColumn("Identificacion");
                modelo.addColumn("Nombre");
                modelo.addColumn("Telefono");
                modelo.addColumn("Correo");
                modelo.addColumn("Subsistema");
                modelo.addColumn("Estado");
                modelo.addColumn("Tipo");
                while (rs.next()) {
                    //System.out.println("Entro");
                    String[] fila = new String[numeroColumnas];
                    for (int i = 0; i < numeroColumnas; i++) {
                        fila[i] = rs.getString(i + 1);
                        fila[0] = rs.getString(1);
                        fila[1] = rs.getString(3);
                        fila[2] = rs.getString(4);
                        fila[3] = rs.getString(5);
                        //ResultSet nombrSubs = Primavera.selectAllFrom("subsistema","id_subsistema",rs.getString(2));
                        //if(nombrSubs.next()){
                        //    fila[4] = nombrSubs.getString(3);
                        //}
                        fila[4] = rs.getString(2);
                        fila[5] = rs.getString(6);
                        fila[6] = rs.getString(11);
                        //ResultSet nombrTipoPers = Primavera.selectAllFrom("tipo_persona","id_tipopersona",rs.getString(11));
                        //if(nombrTipoPers.next()){
                        //    fila[6] = nombrTipoPers.getString(2);
                        //}
                    }
                    modelo.addRow(fila);
                }
                rs.close();
                conn.close();
                this.tablaAMostrar.setModel(modelo);

                /**
                 * if (result != null && result.next()) {
                 * nombreText.setText(result.getString(2));
                 * placaText.setText(result.getString(3));
                 * estadoText.setText(result.getString(4));
                 * idText.setBackground(Color.GRAY);
                 * modificarButton.setEnabled(true);
                 * estadoText.setEnabled(true); crearButton.setEnabled(false); }
                 * else { nombreText.setText(""); placaText.setText("");
                 * estadoText.setText("ACTIVO"); estadoText.setEnabled(false);
                 * modificarButton.setEnabled(false);
                 * crearButton.setEnabled(true); }
                 */
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_todosButtonActionPerformed

    private void profesoresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profesoresButtonActionPerformed
        modelo = new DefaultTableModel();
        if (profesionCb.getSelectedItem().toString().equals("")) {
            profesionCb.requestFocusInWindow();
        } else {
            try {
                conn = Primavera.Enlace(conn);
                String id = Primavera.getId("id_profesion", "nombre_profesion", "Profesion", profesionCb.getSelectedItem().toString());
                ResultSet rs = Primavera.selectAllWhere("personal", "id_profesion", id,"id_tipopersona","3");
                ResultSetMetaData rsMd = rs.getMetaData();
                // Se obtiene el n√∫mero de columnas.
                int numeroColumnas = rsMd.getColumnCount();
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.addColumn("Identificacion");
                modelo.addColumn("Nombre");
                modelo.addColumn("Telefono");
                modelo.addColumn("Correo");
                modelo.addColumn("Subsistema");
                modelo.addColumn("Estado");
                modelo.addColumn("Tipo");
                while (rs.next()) {
                    //System.out.println("Entro");
                    String[] fila = new String[numeroColumnas];
                    for (int i = 0; i < numeroColumnas; i++) {
                        fila[i] = rs.getString(i + 1);
                        fila[0] = rs.getString(1);
                        fila[1] = rs.getString(3);
                        fila[2] = rs.getString(4);
                        fila[3] = rs.getString(5);
                        //ResultSet nombrSubs = Primavera.selectAllFrom("subsistema","id_subsistema",rs.getString(2));
                        //if(nombrSubs.next()){
                        //    fila[4] = nombrSubs.getString(3);
                        //}
                        fila[4] = rs.getString(2);
                        fila[5] = rs.getString(6);
                        fila[6] = rs.getString(11);
                        //ResultSet nombrTipoPers = Primavera.selectAllFrom("tipo_persona","id_tipopersona",rs.getString(11));
                        //if(nombrTipoPers.next()){
                        //    fila[6] = nombrTipoPers.getString(2);
                        //}
                    }
                    modelo.addRow(fila);
                }
                rs.close();
                conn.close();
                this.tablaAMostrar.setModel(modelo);

                /**
                 * if (result != null && result.next()) {
                 * nombreText.setText(result.getString(2));
                 * placaText.setText(result.getString(3));
                 * estadoText.setText(result.getString(4));
                 * idText.setBackground(Color.GRAY);
                 * modificarButton.setEnabled(true);
                 * estadoText.setEnabled(true); crearButton.setEnabled(false); }
                 * else { nombreText.setText(""); placaText.setText("");
                 * estadoText.setText("ACTIVO"); estadoText.setEnabled(false);
                 * modificarButton.setEnabled(false);
                 * crearButton.setEnabled(true); }
                 */
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_profesoresButtonActionPerformed

    private void estudiantesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estudiantesButtonActionPerformed
         modelo = new DefaultTableModel();
        if (profesionCb.getSelectedItem().toString().equals("")) {
            profesionCb.requestFocusInWindow();
        } else {
            try {
                conn = Primavera.Enlace(conn);
                String id = Primavera.getId("id_profesion", "nombre_profesion", "Profesion", profesionCb.getSelectedItem().toString());
                ResultSet rs = Primavera.selectAllWhere("personal", "id_profesion", id,"id_tipopersona","1");
                ResultSetMetaData rsMd = rs.getMetaData();
                // Se obtiene el n√∫mero de columnas.
                int numeroColumnas = rsMd.getColumnCount();
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.addColumn("Identificacion");
                modelo.addColumn("Nombre");
                modelo.addColumn("Telefono");
                modelo.addColumn("Correo");
                modelo.addColumn("Subsistema");
                modelo.addColumn("Estado");
                modelo.addColumn("Tipo");
                while (rs.next()) {
                    //System.out.println("Entro");
                    String[] fila = new String[numeroColumnas];
                    for (int i = 0; i < numeroColumnas; i++) {
                        fila[i] = rs.getString(i + 1);
                        fila[0] = rs.getString(1);
                        fila[1] = rs.getString(3);
                        fila[2] = rs.getString(4);
                        fila[3] = rs.getString(5);
                        //ResultSet nombrSubs = Primavera.selectAllFrom("subsistema","id_subsistema",rs.getString(2));
                        //if(nombrSubs.next()){
                        //    fila[4] = nombrSubs.getString(3);
                        //}
                        fila[4] = rs.getString(2);
                        fila[5] = rs.getString(6);
                        fila[6] = rs.getString(11);
                        //ResultSet nombrTipoPers = Primavera.selectAllFrom("tipo_persona","id_tipopersona",rs.getString(11));
                        //if(nombrTipoPers.next()){
                        //    fila[6] = nombrTipoPers.getString(2);
                        //}
                    }
                    modelo.addRow(fila);
                }
                rs.close();
                conn.close();
                this.tablaAMostrar.setModel(modelo);

                /**
                 * if (result != null && result.next()) {
                 * nombreText.setText(result.getString(2));
                 * placaText.setText(result.getString(3));
                 * estadoText.setText(result.getString(4));
                 * idText.setBackground(Color.GRAY);
                 * modificarButton.setEnabled(true);
                 * estadoText.setEnabled(true); crearButton.setEnabled(false); }
                 * else { nombreText.setText(""); placaText.setText("");
                 * estadoText.setText("ACTIVO"); estadoText.setEnabled(false);
                 * modificarButton.setEnabled(false);
                 * crearButton.setEnabled(true); }
                 */
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_estudiantesButtonActionPerformed

    private void externosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_externosButtonActionPerformed
         modelo = new DefaultTableModel();
        if (profesionCb.getSelectedItem().toString().equals("")) {
            profesionCb.requestFocusInWindow();
        } else {
            try {
                conn = Primavera.Enlace(conn);
                String id = Primavera.getId("id_profesion", "nombre_profesion", "Profesion", profesionCb.getSelectedItem().toString());
                ResultSet rs = Primavera.selectAllWhere("personal", "id_profesion", id,"id_tipopersona","4");
                ResultSetMetaData rsMd = rs.getMetaData();
                // Se obtiene el n√∫mero de columnas.
                int numeroColumnas = rsMd.getColumnCount();
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.addColumn("Identificacion");
                modelo.addColumn("Nombre");
                modelo.addColumn("Telefono");
                modelo.addColumn("Correo");
                modelo.addColumn("Subsistema");
                modelo.addColumn("Estado");
                modelo.addColumn("Tipo");
                while (rs.next()) {
                    //System.out.println("Entro");
                    String[] fila = new String[numeroColumnas];
                    for (int i = 0; i < numeroColumnas; i++) {
                        fila[i] = rs.getString(i + 1);
                        fila[0] = rs.getString(1);
                        fila[1] = rs.getString(3);
                        fila[2] = rs.getString(4);
                        fila[3] = rs.getString(5);
                        //ResultSet nombrSubs = Primavera.selectAllFrom("subsistema","id_subsistema",rs.getString(2));
                        //if(nombrSubs.next()){
                        //    fila[4] = nombrSubs.getString(3);
                        //}
                        fila[4] = rs.getString(2);
                        fila[5] = rs.getString(6);
                        fila[6] = rs.getString(11);
                        //ResultSet nombrTipoPers = Primavera.selectAllFrom("tipo_persona","id_tipopersona",rs.getString(11));
                        //if(nombrTipoPers.next()){
                        //    fila[6] = nombrTipoPers.getString(2);
                        //}
                    }
                    modelo.addRow(fila);
                }
                rs.close();
                conn.close();
                this.tablaAMostrar.setModel(modelo);

                /**
                 * if (result != null && result.next()) {
                 * nombreText.setText(result.getString(2));
                 * placaText.setText(result.getString(3));
                 * estadoText.setText(result.getString(4));
                 * idText.setBackground(Color.GRAY);
                 * modificarButton.setEnabled(true);
                 * estadoText.setEnabled(true); crearButton.setEnabled(false); }
                 * else { nombreText.setText(""); placaText.setText("");
                 * estadoText.setText("ACTIVO"); estadoText.setEnabled(false);
                 * modificarButton.setEnabled(false);
                 * crearButton.setEnabled(true); }
                 */
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_externosButtonActionPerformed

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        MenuPrincipal vent = new MenuPrincipal();
        vent.setVisible(true);
        dispose();
    }//GEN-LAST:event_cancelarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaPorProfesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaPorProfesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaPorProfesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaPorProfesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaPorProfesion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarButton;
    private javax.swing.JButton estudiantesButton;
    private javax.swing.JButton externosButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> profesionCb;
    private javax.swing.JButton profesoresButton;
    private javax.swing.JTable tablaAMostrar;
    private javax.swing.JButton todosButton;
    // End of variables declaration//GEN-END:variables
}
